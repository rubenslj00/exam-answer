
<ul class="panelbar">
    <li class="k-state-active">
        <span class="k-link k-state-selected">Question @Model?.Id</span>
        <div>
            <p>
                @Html.Raw(Model.H1OpenTag)
                Your company is planning to deploy a new application in its Azure subscription. You are asked to configure the required infrastructure for the new application.
                @Html.Raw(Model.H1CloseTag)
            </p>
            <p>
                @Html.Raw(Model.H2OpenTag)
                The new application must be deployed in a layered infrastructure. This infrastructure consists of the following layers:
                @Html.Raw(Model.H2CloseTag)
            </p>
            <p>
                * frontend servers
                <br />
                * backend servers
                <br />
                * database
            </p>
            <p>
                The frontend and backend layers will use virtual machines (VMs). The database layer will be deployed using Azure SQL Databases.
            </p>
            <p>
                You start configuring the networking infrastructure. You need to ensure that you can apply security filtering on each layer independently. Your solution should require the minimum administrative effort.
            </p>
            <p>
                Which five actions should you perform in sequence?
            </p>
        </div>
    </li>
    <li class="k-state-active">
        Answers
        TO DO
    </li>
    <li>
        Explanation
        <div>
            <p>
                You should perform the following actions in order:
            </p>
            <p>
                1. Create a resource group.
                <br />
                2. Create a single virtual network (VNet).
                <br />
                3. Create two subnets.
                <br />
                4. Enable service endpoints for the VNet.
                <br />
                5. Enable service endpoints for the subnets.
            </p>
            <p>
                First, you should to create a new resource group. Because you are deploying a whole new infrastructure for this application, you should create a new resource group and put all new resources in this new resource group.
            </p>
            <p>
                Next, you should to create a single VNet. This VNet will provide connectivity between all elements of the application.
            </p>
            <p>
                Next, you should create two subnets in the new VNet. You should assign a subnet for the frontend layer, and another for the backend layer. You should not create a subnet for the Azure SQL Database, because this is deployed in its own internal network that you cannot customize. You can also create a network security group for each subnet to manage security on each subnet independently.
            </p>
            <p>
                Finally, you should enable service endpoints for the VNet and subnets. You should enable the service endpoint in the Azure SQL Database. This way, your database can directly connect to VMs deployed in the frontend and backend subnets and vice versa.
            </p>
            <p>
                You should not configure peering on each VNet. VNet peering allows you to connect different VNets so resources on each VNet can communicate with each other. In this scenario, there is no need to configure peering, because creating a single VNet satisfies your communication needs.
            </p>
            <p>
                You should not create a VNet for each layer. Although creating a VNet for each layer could solve your communication requirements, this requires much more effort than using a single VNet. Each VNet still requires at least one subnet. Creating multiples VNets for this scenario also requires configuring peering between each VNet. There is also no need to configure a VNet for the data layer because you will use Azure SQL Database, which does not require a VNet.
            </p>
            <p>
                You should not create three subnets. You need to configure a subnet for the frontend layer and another for the backend layer. There is no need to configure an additional subnet for the data layer because Azure SQL Database has all networking requirements configured internally.
            </p>
        </div>
    </li>
    <li>
        References
        <div>
            <p>
                <a href="https://docs.microsoft.com/en-us/azure/virtual-network/scripts/virtual-network-powershell-sample-multi-tier-application" target="_blank" rel="noopener" tabindex="190">Create a network for multi-tier applications script sample</a>
            </p>
            <p>
                <a href="https://docs.microsoft.com/en-us/azure/virtual-network/virtual-network-service-endpoints-overview" target="_blank" rel="noopener" tabindex="190">Virtual Network Service Endpoints</a>
            </p>
            <p>
                <a href="https://docs.microsoft.com/en-us/azure/virtual-network/virtual-network-peering-overview" target="_blank" rel="noopener" tabindex="190">Virtual network peering</a>
            </p>
            <p>
                <a href="https://docs.microsoft.com/en-us/azure/virtual-network/quick-create-powershell" target="_blank" rel="noopener" tabindex="190">Quickstart: Create a virtual network using PowerShell</a>
            </p>
        </div>
    </li>
</ul>