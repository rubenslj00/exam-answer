<ul class="panelbar">
    <li class="k-state-active">
        <span class="k-link k-state-selected">Question @Model?.Id</span>
        <div>
            <p>
                @Html.Raw(Model.H1OpenTag)
                You have an ARM template for creating a Windows virtual machine. You got this template from an existing resource group with a single virtual machine, using the automation script option.
                @Html.Raw(Model.H1CloseTag)
            </p>
            <p>
                @Html.Raw(Model.H2OpenTag)
                You want to reuse this template for other deployments. You need all the resources in the resource group to be on the same location.
                @Html.Raw(Model.H2CloseTag)
            </p>
            <p>
                What should you do?
            </p>
        </div>
    </li>
    <li class="k-state-active">
        Answers
        <div>
            <p>
                <ul class="fieldlist">
                    <li>
                        <input type="radio" name="group" id="@(Html.GetNextId())" class="k-radio">
                        <label class="k-radio-label" for="@(Html.GetNextId(true))">
                            Edit the parameters file and add a new parameter named location of type string with the default value of [resourceGroup().location].
                        </label>
                    </li>
                    <li class="correct">
                        <input type="radio" name="group" id="@(Html.GetNextId())" class="k-radio">
                        <label class="k-radio-label" for="@(Html.GetNextId(true))">
                            Edit the template file and update each location parameter with the value [resourceGroup().location].
                        </label>
                    </li>
                    <li>
                        <input type="radio" name="group" id="@(Html.GetNextId())" class="k-radio">
                        <label class="k-radio-label" for="@(Html.GetNextId(true))">
                            Use the New-AzureRmResourceGroup cmdlet with the location parameter to create a resource group in the desired location. Then use the New-AzureRmResourceGroupDeployment cmdlet using the newly created resource group.
                        </label>
                    </li>
                    <li>
                        <input type="radio" name="group" id="@(Html.GetNextId())" class="k-radio">
                        <label class="k-radio-label" for="@(Html.GetNextId(true))">
                            Use the Azure portal and create a resource group in the desired location. Then use the New-AzureRmResourceGroupDeployment cmdlet using the newly created resource group.
                        </label>
                    </li>
                </ul>
            </p>
        </div>
    </li>
    <li>
        Explanation
        <div>
            <p>
                You should edit the template file and update each location parameter with the value [resourceGroup().location]. The resourceGroup() function gets the resource group object that will be used for deploying the template. This way, all resources in the template will use the same location as the resource group. You need to ensure that all resources are supported in the location that you are using for the resource group.
            </p>
            <p>
                You should not edit the parameters file and add a new parameter named location of type string with the default value of [resourceGroup().location]. This is the first step for centralizing the location value in the template, but you also need to update the location parameter in the template file with the value [parameters('location')].
            </p>
            <p>
                You should not use the Azure portal and create a resource group in the desired location and then use the New-AzureRmResourceGroupDeployment cmdlet using the newly created resource group. If the resource group is deployed in a location different than the configured in the template file, the resources will be deployed in different locations. You need to modify the location parameter in the template file to the value [resourceGroup().location] to inherit the location from the parent resource group.
            </p>
            <p>
                You should not use the New-AzureRmResourceGroup cmdlet with the location parameter to create a resource group in the desired location and then use the New-AzureRmResourceGroupDeployment cmdlet using the newly created resource group. If the resource group is deployed in a location different than the configured in the template file, the resources will be deployed in different locations. You need to modify the location parameter in the template file to the value [resourceGroup().location] to inherit the location from the parent resource group.
            </p>
        </div>
    </li>
    <li>
        References
        <div>
            <p>
                <a href="https://docs.microsoft.com/en-us/azure/azure-resource-manager/resource-manager-templates-resources" target="_blank" rel="noopener">Resources section of Azure Resource Manager templates</a>
            </p>
            <p>
                <a href="https://docs.microsoft.com/en-us/azure/azure-resource-manager/resource-group-template-functions-resource" target="_blank" rel="noopener">Resource functions for Azure Resource Manager templates</a>
            </p>
            <p>
                <a href="https://docs.microsoft.com/en-us/azure/azure-resource-manager/resource-group-template-deploy" target="_blank" rel="noopener">Deploy resources with Resource Manager templates and Azure PowerShell</a>
            </p>
        </div>
    </li>
</ul>