@model QuestionViewModel
@{
    int questionNumber = Model.Exam.Questions.IndexOf(Model) + 1;

    for (int i = 0; i < Model.Contents.Count; i++)
    {
        var content = Model.Contents[i];
        if (content.Text.Contains(" VPN ", StringComparison.CurrentCultureIgnoreCase))
        {
            content.Text = content.Text.Replace(" VPN ",
                $@"<a style=""color: deepskyblue"" class=""underline"" title=""Online security starts with a click. Advanced security. Internet freedom. Complete privacy."" href=""https://go.nordvpn.net/aff_c?offer_id=15&aff_id=40528&url_id=902"" target=""_blank"" rel=""noopener"">  VPN  </a>",
                StringComparison.InvariantCultureIgnoreCase);
        }
    }

    for (int i = 0; i < Model.Explanations.Count; i++)
    {
        var explanation = Model.Explanations[i];
        if (explanation.Text.Contains(" VPN ", StringComparison.CurrentCultureIgnoreCase))
        {
            explanation.Text = explanation.Text.Replace(" VPN ",
        $@"<a class=""inline-block pt1 underline caps"" title=""Online security starts with a click. Advanced security. Internet freedom. Complete privacy."" href=""https://go.nordvpn.net/aff_c?offer_id=15&aff_id=40528&url_id=902"" target=""_blank"" rel=""noopener"">  VPN  </a>",
        StringComparison.InvariantCultureIgnoreCase);
        }
    }
}
<h1>@Model.Exam.Provider / @Model.Exam.Code / Question @(questionNumber)</h1>
<partial name="_PrevNextPartial" />
<amp-accordion disable-session-states>
    <section expanded>

        <h2>Question @(questionNumber)</h2>

        <div>
            <h3>
                @{
                    var lines = Model.Contents.FirstOrDefault()?.Text?.Split(Environment.NewLine);
                }
                @for (int i = 0; i < lines.Length; i++)
                {
                    var line = lines[i].Replace("Constants.PaddingChar.ToString()", "&nbsp;");

                    <p class="ampstart-caption pt1 pb1">
                        @Html.Raw(line)
                    </p>
                    if (i != lines.Length - 1)
                    {
                        <br />
                    }
                }
            </h3>

            @{
                var lastContent = Model.Contents.Skip(1).ToList();
            }
            @foreach (var content in lastContent)
            {
                <h3>
                    @{
                        var lines2 = content.Text.Split(Environment.NewLine);
                    }
                    @for (int i = 0; i < lines2.Length; i++)
                    {
                        var line = lines2[i].Replace("Constants.PaddingChar.ToString()", "&nbsp;");

                        <p class="ampstart-caption pt1 pb1">
                            @Html.Raw(line)
                        </p>
                        if (i != lines2.Length - 1)
                        {
                            <br />
                        }
                    }
                </h3>
            }
        </div>
    </section>
    <section expanded>
        <h2>Answers</h2>
        <div>
            @{
                string correctId = $"correct{Html.GetNextId()}";
            }
            @if (Model.QuestionType == QuestionType.CheckBox)
            {

                <ul class="fieldlist">
                    @foreach (var answer in Model.Answers)
                    {

                        if (answer.IsCorrect == true)
                        {
                            <li class="correct">
                                <h3>
                                    <input type="checkbox" id="@(Html.GetNextId())" class="k-checkbox">
                                    <label class="k-checkbox-label" for="@(Html.GetNextId(true))" [class]="toggleVariable@(questionNumber) + ' k-checkbox-label'">
                                        @(answer.Text)
                                    </label>
                                </h3>
                            </li>
                        }
                        else
                        {
                            <li>
                                <h3>
                                    <input type="checkbox" id="@(Html.GetNextId())" class="k-checkbox">
                                    <label class="k-checkbox-label" for="@(Html.GetNextId(true))">

                                        @(answer.Text)
                                    </label>
                                </h3>
                            </li>
                        }
                    }
                </ul>
            }
            @if (Model.QuestionType == QuestionType.RadioButon)
            {
                <ul class="fieldlist">
                    @foreach (var answer in Model.Answers)
                    {
                        if (answer.IsCorrect == true)
                        {
                            <li class="correct">
                                <h3>
                                    <input type="radio" name="group" id="@(Html.GetNextId())" class="k-radio">
                                    <label class="k-radio-label" for="@(Html.GetNextId(true))" [class]="toggleVariable@(questionNumber) + ' k-radio-label'">
                                        @(Html.Raw(answer.Text))
                                    </label>
                                </h3>
                            </li>
                        }
                        else
                        {
                            <li>
                                <h3>
                                    <input type="radio" name="group" id="@(Html.GetNextId())" class="k-radio">
                                    <label class="k-radio-label" for="@(Html.GetNextId(true))">
                                        @(Html.Raw(answer.Text))
                                    </label>
                                </h3>
                            </li>
                        }
                    }
                </ul>
            }
            <br />
            <div class="center">
                <input type="checkbox" id="@(Html.GetNextId())" class="k-checkbox" on="change: AMP.setState({ toggleVariable@(questionNumber): event.checked ? 'green' : ''})">
                <label class="k-checkbox-label" for="@(Html.GetNextId(true))">
                    Show correct answer
                </label>
            </div>
        </div>

    </section>
    @if (Model?.Explanations?.Count > 0 && Model.ShowAdsInQuestion == true)
    {<section expanded>
            <h2>Ads by Google</h2>
            <div class="center">
                @Html.Raw(Html.GetRandomAddsenseAdd())
            </div>
        </section>
    }
    @if (Model?.Explanations?.Count > 0)
    {

        <section>
            <h2>Explanation</h2>
            <div>
                @if (Model.Explanations?.Count > 0)
                {

                    @foreach (var explanation in Model.Explanations)
                    {
                        <p class="ampstart-caption pt1 pb1">
                            @explanation.Text
                        </p>
                    }
                }
            </div>
        </section>
    }
    @if (Model.References?.Count > 0)
    {
        <section>
            <h2>References</h2>
            <div>
                @if (Model.References?.Count > 0)
                {
                    @foreach (var reference in Model.References)
                    {
                        <p class="ampstart-caption pt1 pb1">
                            <a href="@reference.Url" target="_blank" rel="noopener">@(!string.IsNullOrWhiteSpace(reference.Text) ? reference.Text : reference.Url)</a>
                        </p>
                    }
                }
            </div>
        </section>
    }
</amp-accordion>
<hr />
